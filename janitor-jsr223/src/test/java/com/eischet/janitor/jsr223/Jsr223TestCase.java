package com.eischet.janitor.jsr223;

import com.eischet.janitor.api.types.JanitorObject;
import org.junit.jupiter.api.Test;

import javax.script.*;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Test JSR224 integration of Janitor (javax.script).
 */
public class Jsr223TestCase {

    /**
     * Simple test of the Janitor script engine.
     *
     * @throws ScriptException on errors
     */
    @Test
    public void scriptEngineTest() throws ScriptException {
        final ScriptEngineManager manager = new ScriptEngineManager();
        final ScriptEngine engine = manager.getEngineByName("Janitor");
        assertInstanceOf(JanitorScriptEngine.class, engine);

        final Object result = engine.eval("2 + 2");
        assertInstanceOf(JanitorObject.class, result);

        final JanitorObject janitorResult = (JanitorObject) result;
        assertEquals(4L, janitorResult.janitorGetHostValue());

        final Bindings bindings = engine.createBindings();
        bindings.put("foo", 42);
        final Object result2 = engine.eval("foo + 1", bindings);
        assertInstanceOf(JanitorObject.class, result2);
        assertEquals(43L, ((JanitorObject) result2).janitorGetHostValue());

        bindings.put("bar", "Hello, ");
        final Object result3 = engine.eval("bar + 'World'", bindings);
        assertInstanceOf(JanitorObject.class, result3);
        assertEquals("Hello, World", ((JanitorObject) result3).janitorGetHostValue());

        engine.eval("gobo = bar + 'Gobo';", bindings);
        //  System.out.println("dir: " + bindings.keySet());
        assertEquals("Hello, Gobo", ((JanitorObject) bindings.get("gobo")).janitorGetHostValue());

    }

    /**
     * Test whether the scripting engine is properly registered.
     * <p>
     * (If not, there's a problem with the service provider file, which should be auto-generated by Google
     * AutoService, and this can probably be fixed in pom.xml)
     * </p>
     */
    @Test
    public void listingEngines() {
        ScriptEngineManager mgr = new ScriptEngineManager();
        List<ScriptEngineFactory> factories = mgr.getEngineFactories();
        boolean hasJanitor = false;
        for (ScriptEngineFactory factory : factories) {
            if (factory instanceof JanitorScriptEngineFactory) {
                hasJanitor = true;
                break;
            }
        }
        assertTrue(hasJanitor, "we should find our own engine");
    }

}
