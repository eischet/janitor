<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.eischet.janitor</groupId>
        <artifactId>janitor-project</artifactId>
        <version>0.9.11</version>
    </parent>

    <artifactId>janitor-lang</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.eischet.janitor</groupId>
            <artifactId>janitor-api</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <!-- ANTLR 4 for parsing the language -->
        <!-- https://mvnrepository.com/artifact/org.antlr/antlr4-runtime -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.13.2</version>
            <scope>compile</scope>
        </dependency>

        <!-- logging APIs -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${dep.slf4j}</version>
            <scope>compile</scope>
        </dependency>

        <!-- JSON parsing and generation -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.11.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- JUnit 5 for unit testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.11.1</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging stubs for unit testing -->
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>2.0.16</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.13.2</version>
                <executions>
                    <execution>
                        <id>antlr</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <listener>true</listener>
                            <visitor>true</visitor>
                            <sourceDirectory>src/main/antlr4</sourceDirectory>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                        </configuration>
                    </execution>
                    <!-- While we're at it, generate C# code as well, because that needs manual steps
                         on the C# side... see https://github.com/antlr/antlr4/blob/master/runtime/CSharp/src/README.md
                         Nesting the C# code in the Java project is probably not one of my better ideas, but to get work done
                         it's a good enough solution for now.
                     -->
                    <execution>
                        <id>antlr-csharp</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <listener>true</listener>
                            <visitor>true</visitor>
                            <arguments>
                                <argument>-Dlanguage=CSharp</argument>
                            </arguments>
                            <sourceDirectory>src/main/antlr4</sourceDirectory>
                            <outputDirectory>../janitor-sharp/janitor-grammar/src</outputDirectory>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArguments>
                        <Xlint/>
                    </compilerArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.0</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    
</project>